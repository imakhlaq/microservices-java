spring.application.name=userservice
server.servlet.context-path=/userservice/api
#dyamically specifying portNo
server.port=8082
#
#
#USE CONFIG SERVICE FOR SHARED CONFIG
#Pulling data from config server
spring.config.import=optional:configserver:http://localhost:8089
#
#============================================================================
# IF YOU ARE PULLING DATA FROM CONFIG SERVER THESE NOT NEED TO BE SPECIFICALLY SET
##discovery service url
#eureka.client.service-url.defaultZone=http://localhost:8751/eureka
##setting instance id for this service on eureka (helpful if u have multiple instances)
#eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}
##if you want to send some data to connecting
#eureka.instance.metadata-map.user=akhlaq
#eureka.instance.metadata-map.contextPath=/userservice/api
##no need to set but still you can
##fetch registry from discovery server
#eureka.client.fetch-registry=true
##register itself with eureka server
#eureka.client.register-with-eureka=true
#===============================================================
# Actuator set up
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=always
#===============================================================
# Resilience 4j
#=====================
#Circute breaker
# first instance
resilience4j.circuitbreaker.instances.productUserBreaker.register-health-indicator=true
resilience4j.circuitbreaker.instances.productUserBreaker.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.productUserBreaker.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.productUserBreaker.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.productUserBreaker.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.productUserBreaker.wait-duration-in-open-state=6s
resilience4j.circuitbreaker.instances.productUserBreaker.permitted-number-of-calls-in-half-open-state=5
resilience4j.circuitbreaker.instances.productUserBreaker.sliding-window-size=10
resilience4j.circuitbreaker.instances.productUserBreaker.sliding-window-type=count_based
#
# second instance
resilience4j.circuitbreaker.instances.idProductBreaker.register-health-indicator=true
resilience4j.circuitbreaker.instances.idProductBreaker.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.idProductBreaker.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.idProductBreaker.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.idProductBreaker.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.idProductBreaker.wait-duration-in-open-state=6s
resilience4j.circuitbreaker.instances.idProductBreaker.permitted-number-of-calls-in-half-open-state=5
resilience4j.circuitbreaker.instances.idProductBreaker.sliding-window-size=10
resilience4j.circuitbreaker.instances.idProductBreaker.sliding-window-type=count_based
#
#
#===============================================================
# Resilience 4j
#
#Retry
#
#first instance
resilience4j.retry.instances.productUserRetry.max-attempts=3
resilience4j.retry.instances.productUserRetry.wait-duration=2s
#
#
#===============================================================
# Resilience 4j
#
#Ratelimit
#
#first instance
resilience4j.ratelimiter.instances.productUserLimiter.limit-refresh-period=4s
resilience4j.ratelimiter.instances.productUserLimiter.limit-for-period=2
resilience4j.ratelimiter.instances.productUserLimiter.timeout-duration=5
